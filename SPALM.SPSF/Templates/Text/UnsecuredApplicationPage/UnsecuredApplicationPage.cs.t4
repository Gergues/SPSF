<#@ template language="C#" #>
// <copyright file="<#= GeneratedFileName #>" company="<#= CopyrightCompanyName #>">
// Copyright <#= CopyrightCompanyName #>. All rights reserved.
// </copyright>
// <author><#= System.Environment.UserDomainName #>\\<#= System.Environment.UserName #></author>
// <date><#= System.DateTime.Now.ToString("u") #></date>
namespace <#= ProjectNamespace #>
{
  using System;
  using System.IO;
  using System.Security.Permissions;
  using System.Text;
  using System.Web;
  using System.Web.UI;
  using System.Web.UI.HtmlControls;
  using System.Web.UI.WebControls;
  using System.Xml;
  using System.Xml.Serialization;
  using Microsoft.SharePoint;
  using Microsoft.SharePoint.Security;
  using Microsoft.SharePoint.Utilities;
  using Microsoft.SharePoint.WebControls;

  /// <summary>
  /// TODO: Add comment for <#= ApplicationPageName #>
  /// </summary>
  [SharePointPermission(SecurityAction.InheritanceDemand, ObjectModel = true)] 
  public class <#= ApplicationPageName #> : LayoutsPageBase
  {      
    /// <summary>
    /// Gets or sets the pointer to the TextInputBox on the page 
    /// </summary>
    protected InputFormTextBox TxtInput
    {
      get;
      set;
    }

    /// <summary>
    /// Gets or sets the pointer to the Ok button on the page
    /// </summary>
    protected Button BtnOk
    {
      get;
      set;
    }

    /// <summary>
    /// Gets or sets the pointer to the Cancel button on the page
    /// </summary>
    protected Button BtnCancel
    {
      get;
      set;
    }
<#
if(ApplicationPageAllowAnonymous)
{
#>    
    /// <summary>
    /// Gets boolean value if anonymous access is allowed
    /// </summary>
    protected override bool AllowAnonymousAccess 
    { 
      get 
      { 
        return true; 
      } 
    }        
<#
}
#>

    /// <summary>
    /// Defines which rights are required
    /// </summary>
    protected override SPBasePermissions RightsRequired
    {
      get
      {  
        return base.RightsRequired | SPBasePermissions.BrowseUserInfo | SPBasePermissions.ManageLists;
      }
    }    
      
    /// <summary>
    /// Sets the inital values of controls
    /// </summary>
    /// <param name="e">Event arguments</param>
    protected override void OnLoad(EventArgs e)
    {
      SPSite siteCollection = this.Site;
      SPWeb site = this.Web;
 
      this.BtnOk.Click += new EventHandler(this.BtnOk_Click);
      this.BtnCancel.Click += new EventHandler(this.BtnCancel_Click); 
    }

    /// <summary>
    /// TODO: Add comment
    /// </summary>
    /// <param name="sender">Sender of the event</param>
    /// <param name="e">Arguments of the event</param>
    private void BtnCancel_Click(object sender, EventArgs e)
    {
      this.TxtInput.Text = "Cancel clicked";
    }

    /// <summary>
    /// TODO: Add comment
    /// </summary>
    /// <param name="sender">Sender of the event</param>
    /// <param name="e">Arguments of the event</param>
    private void BtnOk_Click(object sender, EventArgs e)
    {
      this.TxtInput.Text = "Ok clicked";
    }    
  }
}